<?xml version="1.0"?>
<project name="Skeletor" default="skeletor">

	<description>Generate a project skeleton</description>

	<property name="project-fullname" value="My SuperAwesome Project"/>
	<property name="project-directory" value="${string::trim(string::to-lower(string::replace(project-fullname, ' ', '-')))}"/>
	<property name="project-js-filename" value="${string::trim(string::to-lower(string::replace(project-fullname, ' ', '-')))}"/>
	<property name="project-js-modulename" value="${string::trim(string::replace(project-fullname, ' ', ''))}"/>

	<property name="project-type" value="html5"/>

	<property name="ScriptsPath" value="${path::get-directory-name(project::get-buildfile-path())}"/>

	<target name="skeletor">
		<call target="retrieve-skeleton"/>
	</target>

	
	<target name="retrieve-skeleton">

		<get src="https://github.com/boomworks/ui-dev-skeleton/zipball/master" dest="${ScriptsPath}/ui-dev-skeleton.zip" usetimestamp="true" failonerror="true"/>

		<!-- TODO: notify user if get error? How about if up to date? How do we know? -->
		<if test="${not file::exists(ScriptsPath + '/ui-dev-skeleton.zip')}">
			<fail message="Couldn't download the latest package from GitHub for some reason. Try again later"/>
		</if>

		<if test="${file::exists(ScriptsPath + '/ui-dev-skeleton.zip')}">

			<unzip zipfile="${ScriptsPath}/ui-dev-skeleton.zip"/>

			<foreach item="File" property="filename">

				<in>
					<items basedir="./">
						<include name="boomworks-ui-dev-skeleton-*/${project-type}/**/*" />
					</items>
				</in>

				<do>

					<property name="file.path" value="${path::get-directory-name(filename)}\"/>
					<property name="file.filename" value="${path::get-file-name(filename)}"/>
					<property name="file.toFilename" value="${string::replace(file.filename, '@PROJECT-NAME@', project-fullname)}"/>
					<property name="file.toFilename" value="${string::replace(file.toFilename, '@PROJECT-JS-FILENAME@', project-js-filename)}"/>
					<property name="file.toFilename" value="${string::replace(file.toFilename, '@PROJECT-JS-MODULENAME@', project-js-modulename)}"/>

					<!-- This assumes that the length will always be 34 -->
					<property name="zipball.path" value="${string::substring(file.path, string::get-length(ScriptsPath), 34)}"/>
					<property name="target.path" value="${string::replace(file.path, zipball.path, '')}"/>
					<property name="target.path" value="${string::replace(target.path, 'scripts\' + project-type, project-directory)}"/>

					<echo>
						File: ${filename}
						Copy to: ${target.path}${file.toFilename}
					</echo>

					<move file="${filename}" tofile="${target.path}${file.toFilename}">
						<filterchain>
							<replacetokens>
								<token key="PROJECT-NAME" value="${project-fullname}" />
								<token key="PROJECT-JS-FILENAME" value="${project-js-filename}" />
								<token key="PROJECT-JS-MODULENAME" value="${project-js-modulename}" />
							</replacetokens>
						</filterchain>
					</move>

				</do>
			</foreach>

			<delete verbose="true">
				<fileset>
					<include name="${ScriptsPath}/boomworks-ui-dev-skeleton-*" />
					<include name="${ScriptsPath}/ui-dev-skeleton.zip" />
				</fileset>
			</delete>

		</if>

	</target>
  
</project>

